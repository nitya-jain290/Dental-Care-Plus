-- MySQL Script generated by MySQL Workbench
-- 05/17/17 12:16:02
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema mydentap
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydentap
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydentap` DEFAULT CHARACTER SET latin1 ;
USE `mydentap` ;

-- -----------------------------------------------------
-- Table `mydentap`.`appointments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydentap`.`appointments` (
  `AppointID` INT(11) NOT NULL AUTO_INCREMENT,
  `FromTime` TIME NULL DEFAULT NULL,
  `ToTime` TIME NULL DEFAULT NULL,
  `DateApp` DATE NULL DEFAULT NULL,
  `PatientName` VARCHAR(45) NULL DEFAULT NULL,
  `Service` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`AppointID`))
ENGINE = MyISAM
AUTO_INCREMENT = 10060
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `mydentap`.`patientlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydentap`.`patientlist` (
  `PatientID` INT(11) NOT NULL AUTO_INCREMENT,
  `FName` VARCHAR(45) NULL DEFAULT NULL,
  `MName` VARCHAR(45) NULL DEFAULT NULL,
  `LName` VARCHAR(45) NULL DEFAULT NULL,
  `Age` INT(11) NULL DEFAULT NULL,
  `Contact` DOUBLE NULL DEFAULT NULL,
  `Address` VARCHAR(100) NULL DEFAULT NULL,
  `DateAdded` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`PatientID`))
ENGINE = MyISAM
AUTO_INCREMENT = 10000004
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `mydentap`.`patientsname`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydentap`.`patientsname` (
  `PatID` INT(11) NOT NULL AUTO_INCREMENT,
  `WholeName` VARCHAR(100) NOT NULL,
  `Address` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`PatID`))
ENGINE = MyISAM
AUTO_INCREMENT = 10000004
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `mydentap`.`timeconcat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydentap`.`timeconcat` (
  `App_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Schedule` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`App_ID`))
ENGINE = MyISAM
DEFAULT CHARACTER SET = latin1;

USE `mydentap` ;

-- -----------------------------------------------------
-- procedure appointByDate
-- -----------------------------------------------------

DELIMITER $$
USE `mydentap`$$
CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `appointByDate`(
	in DateGiven date
)
BEGIN
SELECT appointID, CONCAT(TIME_FORMAT(Fromtime, '%h:%i %p'), " - TO - ", TIME_FORMAT(totime, '%h:%i %p')) AS SCHEDULE, PatientName, Service, DateApp from appointments where DateApp = DateGiven ORDER BY DateApp ASC;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure appointmentsByPatID
-- -----------------------------------------------------

DELIMITER $$
USE `mydentap`$$
CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `appointmentsByPatID`(
	IN NamePat varchar(50)
)
BEGIN
SELECT appointID, CONCAT(TIME_FORMAT(Fromtime, '%h:%i %p'), " - TO - ", TIME_FORMAT(totime, '%h:%i %p')) AS SCHEDULE, PatientName, Service, DateApp from appointments where PatientName = NamePat ORDER BY DateApp ASC;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure cancelAppointment
-- -----------------------------------------------------

DELIMITER $$
USE `mydentap`$$
CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `cancelAppointment`(

in apID int

)
BEGIN
DELETE FROM Appointments where AppointID = apID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertPersonalInfo
-- -----------------------------------------------------

DELIMITER $$
USE `mydentap`$$
CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `insertPersonalInfo`(
		IN firstn VARCHAR(20),
        IN middlen VARCHAR(20),
        IN lastn VARCHAR(20),
        IN age int,
        IN contactn double,
        IN addr varchar(100)
        
        )
BEGIN
INSERT into patientlist (FName, MName, LName, Age, Contact, Address, DateAdded) values (firstn, middlen, lastn, age, contactn, addr, current_date());

INSERT into patientsname(WholeName, Address) values (CONCAT(firstn, " ", middlen, " ", lastn), addr);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure schedForToday
-- -----------------------------------------------------

DELIMITER $$
USE `mydentap`$$
CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `schedForToday`()
BEGIN
select appointID, CONCAT(TIME_FORMAT(Fromtime, '%h:%i %p'), " - TO - ", TIME_FORMAT(totime, '%h:%i %p')) AS SCHEDULE, PatientName, Service from appointments WHERE DateApp like CURDATE() ORDER BY FromTime asc;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure searchPatient
-- -----------------------------------------------------

DELIMITER $$
USE `mydentap`$$
CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `searchPatient`(
	IN nameInput varchar(30)
)
BEGIN
select patientsname.WholeName, patientlist.Address, patientlist.Age, patientlist.Contact, patientList.PatientID from patientsname inner join patientlist on patientsname.PatID = patientlist.PatientID where patientsname.WholeName LIKE CONCAT("%",nameInput,"%"); 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure setAppointment
-- -----------------------------------------------------

DELIMITER $$
USE `mydentap`$$
CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `setAppointment`(

    IN fromT time,
    IN toT time,
    IN NamePatient varchar(60),
    IN serv varchar(30),
    IN servDate date
    
)
BEGIN

IF ( select exists (select 1 from appointments where FromTime = fromT or ToTime = toT) ) 
	THEN
     
        select 'APPOINTMENT NOT SET. CONFLICTING SCHEDULES!' as SORRY;

ELSE

			INSERT INTO appointments (FromTime, ToTime, PatientName, Service, DateApp)
			VALUES (fromT, toT, NamePatient, serv, servDate);
END IF;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure updatePersonalInfo
-- -----------------------------------------------------

DELIMITER $$
USE `mydentap`$$
CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `updatePersonalInfo`(
		IN firstn VARCHAR(20),
        IN middlen VARCHAR(20),
        IN lastn VARCHAR(20),
        IN age int,
        IN contactn double,
        IN addr varchar(100),
        IN patieID int
        )
BEGIN

UPDATE patientlist SET FName=firstn, MName=middlen, LName=lastn, Age=age, Contact=contactn, Address=addr WHERE PatientID=patieID;

UPDATE patientsname SET WholeName = CONCAT(firstn, " ", middlen, " ", lastn), Address = addr WHERE PatID =patieID;
END$$

DELIMITER ;

DELIMITER $$
USE `mydentap`$$
CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `updateAppoint`(
		IN newFrom time,
        IN newTo time,
        IN newDate date,
        IN newService varchar(100),
        IN appointmentID int
        )
BEGIN
UPDATE appointments SET FromTime=newFrom, ToTime=newTo, DateApp=newDate, Service=newService WHERE AppointID=appointmentID;
END$$

DELIMITER $$
USE `mydentap`$$
CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `deletePatient`(
in patIDn int
)
BEGIN

DELETE FROM patientsname where PatID = patIDn;
DELETE FROM patientlist where PatientID = patIDn;
END$$

DELIMITER ;

DELIMITER $$
USE `mydentap`$$

CREATE DEFINER=`Renzo`@`localhost` PROCEDURE `getToday`()
BEGIN
select appointID, CONCAT(TIME_FORMAT(Fromtime, '%h:%i %p'), " - TO - ", TIME_FORMAT(totime, '%h:%i %p')) AS SCHEDULE, PatientName, Contact, Service from appointments inner join patientsname on appointments.patientname = patientsname.Wholename inner join patientlist on patientsname.patID = patientlist.PatientID WHERE DateApp like CURDATE() ORDER BY FromTime asc;
END$$

DELIMITER ;


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
